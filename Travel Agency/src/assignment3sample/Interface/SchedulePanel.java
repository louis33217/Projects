/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment3sample.Interface;

import assignment3sample.Business.Flight;
import assignment3sample.Business.Flightschedule;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author user
 */
public class SchedulePanel extends javax.swing.JPanel {

    /**
     * Creates new form FindCarPanel
     */
    private JPanel rightPanel;
    private Flightschedule flightInfor;
    private List<String> brandList;
    public SchedulePanel(JPanel rightPanel, Flightschedule flightInfor, List<String> brandList) {
        this.rightPanel = rightPanel;
        this.flightInfor = flightInfor;
        this.brandList = brandList;
        initComponents();
        populate(flightInfor.getFlightList());
    }
    
    public void populate(ArrayList<Flight> carList) {
        DefaultTableModel dtm = (DefaultTableModel)tblCarlist.getModel();
        dtm.setRowCount(0);
        
        for(Flight a : carList){
            Object[] row = new Object[dtm.getColumnCount()];
            row[0]=a;
            row[1]=a.getSeats();
            row[2]=a.getDeparute();
            row[3]=a.getArrive();
            row[4]=a.getFrom();
            row[5]=a.getTo();
            dtm.addRow(row);
        }
        lbLasttime.setText(flightInfor.getLatestDateTime());
    }
    
    public void cleanSearch() {
        cbBrand.setSelectedItem("All");
        cbDep.setSelectedItem("All");
        cbArr.setSelectedItem("All");
        txtSeats.setText("");
        txtFrom.setText("");
        txtTo.setText("");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarlist = new javax.swing.JTable();
        lbTime = new javax.swing.JLabel();
        lbLasttime = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        lbBrand = new javax.swing.JLabel();
        cbBrand = new javax.swing.JComboBox<>();
        btnFilter = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtSeats = new javax.swing.JTextField();
        lbMin = new javax.swing.JLabel();
        lbMax = new javax.swing.JLabel();
        cbDep = new javax.swing.JComboBox<>();
        cbArr = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtFrom = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTo = new javax.swing.JTextField();
        btnCancel = new javax.swing.JButton();

        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblCarlist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airliners", "Seats", "Departure time", "Arrive time", "From", "To"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCarlist);
        if (tblCarlist.getColumnModel().getColumnCount() > 0) {
            tblCarlist.getColumnModel().getColumn(0).setResizable(false);
            tblCarlist.getColumnModel().getColumn(1).setResizable(false);
            tblCarlist.getColumnModel().getColumn(2).setResizable(false);
            tblCarlist.getColumnModel().getColumn(3).setResizable(false);
            tblCarlist.getColumnModel().getColumn(4).setResizable(false);
            tblCarlist.getColumnModel().getColumn(5).setResizable(false);
        }

        lbTime.setText("Last update time:");

        lbLasttime.setText("00-00-0000 00:00:00");

        btnView.setText("View flight detail");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        lbBrand.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbBrand.setText("Airliners:");

        ArrayList<String> list = new ArrayList<String>() {{add("All");}};
        list.addAll(brandList);
        cbBrand.setModel(new DefaultComboBoxModel(list.toArray(new String[0])));
        cbBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBrandActionPerformed(evt);
            }
        });

        btnFilter.setText("Filter");
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Seats:");

        txtSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSeatsActionPerformed(evt);
            }
        });

        lbMin.setText("From:");

        lbMax.setText("To:");

        cbDep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Morning", "Day", "Evening", "Night" }));

        cbArr.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Morning", "Day", "Evening", "Night" }));

        jLabel2.setText("Departure time:");

        txtFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFromActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Arrive time:");

        txtTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtToActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel flight");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbTime)
                        .addGap(18, 18, 18)
                        .addComponent(lbLasttime))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addGap(676, 676, 676))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lbBrand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addComponent(lbMin))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(cbDep, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(cbArr, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(cbBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lbMax)))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(59, 59, 59)
                                            .addComponent(btnFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(29, 31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(lbBrand)
                    .addComponent(jLabel1)
                    .addComponent(cbBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(cbDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbArr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMin)
                    .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbMax)
                    .addComponent(btnFilter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTime)
                    .addComponent(lbLasttime))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        rightPanel.remove(this);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.previous(rightPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCarlist.getSelectedRow();
        if(selectedRow >=0) {
            Flight result = (Flight) tblCarlist.getValueAt(selectedRow, 0);
            ViewFlightPanel panel = new ViewFlightPanel(rightPanel, flightInfor, result, brandList);
            rightPanel.add("YourCarPanel", panel);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from table first!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void cbBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBrandActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBrandActionPerformed

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        // TODO add your handling code here:
        ArrayList<Flight> result = new ArrayList<>();
        String brand = cbBrand.getSelectedItem().toString();
        String dep = cbDep.getSelectedItem().toString();
        String arr = cbArr.getSelectedItem().toString();
        int seats;
        String from = txtFrom.getText();
        String to = txtTo.getText();
        try {
            if (!txtSeats.getText().equals("")) {
                seats = Integer.parseInt(txtSeats.getText());
            } else {
                seats = -1;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please type in a number for seats");
            return;
        }
        for (Flight c : flightInfor.getFlightList()) {
            if (!brand.equals("All") && !brand.equals(c.getAirliners())) {
                continue;
            }
            if (!txtSeats.getText().equals("") && !(seats == c.getSeats())) {
                continue;
            }
            if (!dep.equals("All") && !dep.equals(c.getDeparute())) {
                continue;
            }
            if (!arr.equals("All") && !arr.equals(c.getArrive())) {
                continue;
            }
            if (!from.equals("") && !from.equals(c.getFrom())) {
                continue;
            }
            if (!to.equals("") && !to.equals(c.getTo())) {
                continue;
            }
            result.add(c);
        }
        if(result.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No match flight, please filter again", "Information", JOptionPane.INFORMATION_MESSAGE);
        } else {
            populate(result);
        }
    }//GEN-LAST:event_btnFilterActionPerformed

    private void txtSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSeatsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSeatsActionPerformed

    private void txtFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFromActionPerformed

    private void txtToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtToActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCarlist.getSelectedRow();
        if(selectedRow >=0) {
            int dialogRst = JOptionPane.showConfirmDialog(null, "Would you like to cancel the flight?", "Warning", JOptionPane.YES_NO_OPTION);
            if (dialogRst == JOptionPane.YES_OPTION) {
                Flight result = (Flight) tblCarlist.getValueAt(selectedRow, 0);
                flightInfor.deleteProduct(result);
                populate(flightInfor.getFlightList());
                cleanSearch();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from table first!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> cbArr;
    private javax.swing.JComboBox<String> cbBrand;
    private javax.swing.JComboBox<String> cbDep;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbBrand;
    private javax.swing.JLabel lbLasttime;
    private javax.swing.JLabel lbMax;
    private javax.swing.JLabel lbMin;
    private javax.swing.JLabel lbTime;
    private javax.swing.JTable tblCarlist;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JTextField txtSeats;
    private javax.swing.JTextField txtTo;
    // End of variables declaration//GEN-END:variables
}
